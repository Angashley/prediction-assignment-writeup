lines(data$r1,data$Mix3, type="l", col="turquoise",lwd = 2.5)
lines(data$r1,data$Mix3b, type="l", col="turquoise",lwd = 2.5)
lines(r1[1:7],Mix4[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix4b[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix5[1:7], type="l", col="black",lwd = 2.5)
lines(r1[1:7],Mix5b[1:7], type="l", col="black",lwd = 2.5)
myplot <- legend("topright", border = NULL, bty = "n",
c("Mix 1","Mix 2", "Mix 3", "Mix 4", "Mix 5"),
lty=c(1,1,1,1,1), lwd=c(2.5,2.5,2.5,2.5,2.5),
col=c("darkblue","red","turquoise","green","black"),
inset = 0.02, cex = 0.8, text.width = 2.5)
myplot
r1 <- c(2.5,7.5,15,25,35,45,57.5,72.5)
Mix1 <- c(0.41,0.35,0.35,0.34,0.32,0.24,0.26,0.23)
Mix1b <- c(0.43,0.37,0.33,0.33,0.31,0.31,0.25,0.22)
Mix2 <- c(0.53,0.55,0.54,0.39,0.32,0.26,0.17,0.07)
Mix2b <- c(0.49,0.50,0.47,0.37,0.32,0.24,0.17,0.08)
Mix3 <- c(0.43,0.45,0.48,0.38,0.27,0.21,0.11,0.03)
Mix3b <- c(0.31,0.38,0.48,0.36,0.29,0.20,0.10,0.05)
Mix4 <- c(0.90,0.75,0.60,0.35,0.21,0.11,0.01,0.00)
Mix4b <- c(0.98,0.80,0.64,0.40,0.24,0.15,0.02,0.00)
Mix5 <- c(0.55,0.52,0.49,0.29,0.16,0.03,0.01,0.00)
Mix5b <- c(0.54,0.49,0.50,0.33,0.13,0.04,0.01,0.00)
data <- data.frame(r1,Mix1,Mix1b,Mix2,Mix2b,Mix3,Mix3b,Mix4,Mix4b,Mix5,Mix5b)
xlab = "Distance from concrete surface, mm"
ylab = expression("Chloride content, " ~ Cl^{"-"} ~ "% of dry concrete")
main = "Figure 3 - Chloride ingress profiles"
windowsFonts(Calibri=windowsFont("Calibri"))
par(family = "Calibri")
plot <- plot(data$r1,data$Mix1, type="l", col = "darkblue", xlab=xlab,ylab=ylab, ylim = c(0,1), xlim = c(0,80), lwd = 2.5)
r1 <- c(2.5,7.5,15,25,35,45,57.5,72.5)
Mix1 <- c(0.41,0.35,0.35,0.34,0.32,0.24,0.26,0.23)
Mix1b <- c(0.43,0.37,0.33,0.33,0.31,0.31,0.25,0.22)
Mix2 <- c(0.53,0.55,0.54,0.39,0.32,0.26,0.17,0.07)
Mix2b <- c(0.49,0.50,0.47,0.37,0.32,0.24,0.17,0.08)
Mix3 <- c(0.43,0.45,0.48,0.38,0.27,0.21,0.11,0.03)
Mix3b <- c(0.31,0.38,0.48,0.36,0.29,0.20,0.10,0.05)
Mix4 <- c(0.90,0.75,0.60,0.35,0.21,0.11,0.01,0.00)
Mix4b <- c(0.98,0.80,0.64,0.40,0.24,0.15,0.02,0.00)
Mix5 <- c(0.55,0.52,0.49,0.29,0.16,0.03,0.01,0.00)
Mix5b <- c(0.54,0.49,0.50,0.33,0.13,0.04,0.01,0.00)
data <- data.frame(r1,Mix1,Mix1b,Mix2,Mix2b,Mix3,Mix3b,Mix4,Mix4b,Mix5,Mix5b)
xlab = "Distance from concrete surface, mm"
ylab = expression("Chloride content, " ~ Cl^{"-"} ~ "% of dry concrete")
main = "Figure 3 - Chloride ingress profiles"
windowsFonts(Calibri=windowsFont("Calibri"))
par(family = "Calibri")
plot(data$r1,data$Mix1, type="l", col = "darkblue", xlab=xlab,ylab=ylab, ylim = c(0,1), xlim = c(0,80), lwd = 2.5)
lines(data$r1,data$Mix1b, type="l", col="darkblue",lwd = 2.5)
lines(data$r1,data$Mix2, type="l", col="red",lwd = 2.5)
lines(data$r1,data$Mix2b, type="l", col="red",lwd = 2.5)
lines(data$r1,data$Mix3, type="l", col="turquoise",lwd = 2.5)
lines(data$r1,data$Mix3b, type="l", col="turquoise",lwd = 2.5)
lines(r1[1:7],Mix4[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix4b[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix5[1:7], type="l", col="black",lwd = 2.5)
lines(r1[1:7],Mix5b[1:7], type="l", col="black",lwd = 2.5)
legend("topright", border = NULL, bty = "n",
c("Mix 1","Mix 2", "Mix 3", "Mix 4", "Mix 5"),
lty=c(1,1,1,1,1), lwd=c(2.5,2.5,2.5,2.5,2.5),
col=c("darkblue","red","turquoise","green","black"),
inset = 0.02, cex = 0.8, text.width = 2.5)
legend("topright", border = NULL, bty = "n",
c("Mix 1","Mix 2", "Mix 3", "Mix 4", "Mix 5"),
lty=c(1,1,1,1,1), lwd=c(2.5,2.5,2.5,2.5,2.5),
col=c("darkblue","red","turquoise","green","black"),
inset = 0.02, cex = 0.8)
r1 <- c(2.5,7.5,15,25,35,45,57.5,72.5)
Mix1 <- c(0.41,0.35,0.35,0.34,0.32,0.24,0.26,0.23)
Mix1b <- c(0.43,0.37,0.33,0.33,0.31,0.31,0.25,0.22)
Mix2 <- c(0.53,0.55,0.54,0.39,0.32,0.26,0.17,0.07)
Mix2b <- c(0.49,0.50,0.47,0.37,0.32,0.24,0.17,0.08)
Mix3 <- c(0.43,0.45,0.48,0.38,0.27,0.21,0.11,0.03)
Mix3b <- c(0.31,0.38,0.48,0.36,0.29,0.20,0.10,0.05)
Mix4 <- c(0.90,0.75,0.60,0.35,0.21,0.11,0.01,0.00)
Mix4b <- c(0.98,0.80,0.64,0.40,0.24,0.15,0.02,0.00)
Mix5 <- c(0.55,0.52,0.49,0.29,0.16,0.03,0.01,0.00)
Mix5b <- c(0.54,0.49,0.50,0.33,0.13,0.04,0.01,0.00)
data <- data.frame(r1,Mix1,Mix1b,Mix2,Mix2b,Mix3,Mix3b,Mix4,Mix4b,Mix5,Mix5b)
xlab = "Distance from concrete surface, mm"
ylab = expression("Chloride content, " ~ Cl^{"-"} ~ "% of dry concrete")
main = "Figure 3 - Chloride ingress profiles"
windowsFonts(Calibri=windowsFont("Calibri"))
par(family = "Calibri")
plot(data$r1,data$Mix1, type="l", col = "darkblue", xlab=xlab,ylab=ylab, ylim = c(0,1), xlim = c(0,80), lwd = 2.5)
lines(data$r1,data$Mix1b, type="l", col="darkblue",lwd = 2.5)
lines(data$r1,data$Mix2, type="l", col="red",lwd = 2.5)
lines(data$r1,data$Mix2b, type="l", col="red",lwd = 2.5)
lines(data$r1,data$Mix3, type="l", col="turquoise",lwd = 2.5)
lines(data$r1,data$Mix3b, type="l", col="turquoise",lwd = 2.5)
lines(r1[1:7],Mix4[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix4b[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix5[1:7], type="l", col="black",lwd = 2.5)
lines(r1[1:7],Mix5b[1:7], type="l", col="black",lwd = 2.5)
legend("topright", border = NULL, bty = "n",
c("Mix 1","Mix 2", "Mix 3", "Mix 4", "Mix 5"),
lty=c(1,1,1,1,1), lwd=c(2.5,2.5,2.5,2.5,2.5),
col=c("darkblue","red","turquoise","green","black"),
inset = 0.02, cex = 0.8)
r1 <- c(2.5,7.5,15,25,35,45,57.5,72.5)
Mix1 <- c(0.41,0.35,0.35,0.34,0.32,0.24,0.26,0.23)
Mix1b <- c(0.43,0.37,0.33,0.33,0.31,0.31,0.25,0.22)
Mix2 <- c(0.53,0.55,0.54,0.39,0.32,0.26,0.17,0.07)
Mix2b <- c(0.49,0.50,0.47,0.37,0.32,0.24,0.17,0.08)
Mix3 <- c(0.43,0.45,0.48,0.38,0.27,0.21,0.11,0.03)
Mix3b <- c(0.31,0.38,0.48,0.36,0.29,0.20,0.10,0.05)
Mix4 <- c(0.90,0.75,0.60,0.35,0.21,0.11,0.01,0.00)
Mix4b <- c(0.98,0.80,0.64,0.40,0.24,0.15,0.02,0.00)
Mix5 <- c(0.55,0.52,0.49,0.29,0.16,0.03,0.01,0.00)
Mix5b <- c(0.54,0.49,0.50,0.33,0.13,0.04,0.01,0.00)
data <- data.frame(r1,Mix1,Mix1b,Mix2,Mix2b,Mix3,Mix3b,Mix4,Mix4b,Mix5,Mix5b)
xlab = "Distance from concrete surface, mm"
ylab = expression("Chloride content, " ~ Cl^{"-"} ~ "% of dry concrete")
main = "Figure 3 - Chloride ingress profiles"
windowsFonts(Calibri=windowsFont("Calibri"))
par(family = "Calibri")
plot(data$r1,data$Mix1, type="l", col = "darkblue", xlab=xlab,ylab=ylab, ylim = c(0,1), xlim = c(0,80), lwd = 2.5, main = main)
lines(data$r1,data$Mix1b, type="l", col="darkblue",lwd = 2.5)
lines(data$r1,data$Mix2, type="l", col="red",lwd = 2.5)
lines(data$r1,data$Mix2b, type="l", col="red",lwd = 2.5)
lines(data$r1,data$Mix3, type="l", col="turquoise",lwd = 2.5)
lines(data$r1,data$Mix3b, type="l", col="turquoise",lwd = 2.5)
lines(r1[1:7],Mix4[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix4b[1:7], type="l", col="green",lwd = 2.5)
lines(r1[1:7],Mix5[1:7], type="l", col="black",lwd = 2.5)
lines(r1[1:7],Mix5b[1:7], type="l", col="black",lwd = 2.5)
legend("topright", border = NULL, bty = "n",
c("Mix 1","Mix 2", "Mix 3", "Mix 4", "Mix 5"),
lty=c(1,1,1,1,1), lwd=c(2.5,2.5,2.5,2.5,2.5),
col=c("darkblue","red","turquoise","green","black"),
inset = 0.02, cex = 0.8)
s <- 662695445
x <- 5
t <- s
x^2/2t
x^2/(2*t)
t <- 662695446
x^2/(2*t)
x^2/(2*21*365*24*60*60)
x <- 4
x^2/(2*21*365*24*60*60)
format(x^2/(2*t), scientific=FALSE)
x <- 0.4
format(x^2/(2*t), scientific=FALSE)
x^2/(2*21*365*24*60*60)
x <- 0.04
format(x^2/(2*t), scientific=FALSE)
x^2/(2*21*365*24*60*60)
x <- 0.05
x^2/(2*t)
x^2/(2*22*365*24*60*60)
sqrt((2*21*365*24*60*60)*1.2)
sqrt((2*21*365*24*60*60)*0.4)
sqrt((2*21*365*24*60*60)*1.0)
sqrt((2.4*2.4*21*365*24*60*60)*1.0)
sqrt((2.4*2.4*21*365*24*60*60)*1.2)
0.05^2/(2*21*365*24*60*60)
sqrt((2*21*365*24*60*60)*1.2)
sqrt((2.4*21*365*24*60*60)*1.2)
sqrt((2.4^2*21*365*24*60*60)*1.2)
sqrt((2^2*21*365*24*60*60)*1.2)
sqrt((2*21*365*24*60*60)*1.2)
dataset(mtcars)
data("mtcars")
knitr::opts_chunk$set(echo = TRUE)
data("mtcars")
str(mtcars)
cars <- mtcars
plot(mpg,am,cars)
plot(mpg,am,data=cars)
plot(mtcars$mpg,mtcars$am,xlab="Transmission mode",ylab="Miles per gallon (MPG)")
plot(mtcars$am,mtcars$mpg,xlab="Transmission mode",ylab="Miles per gallon (MPG)")
library(ggplot2)
ggplot(mtcars$mpg,aes(mtcars$am)) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars$mpg,aes(factor(mtcars$am))) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars$mpg,aes(as.factor(mtcars$am))) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
```{r, echo=FALSE}
library(knitr)
```{r, echo=FALSE}
```{r, echo=FALSE, message=FALSE}
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(knitr)
opts_chunk$set(echo = TRUE, fig.width=7, fig.height=5, fig.path='Figs/', cache=TRUE)
inline_hook <- function(x) {
if (is.numeric(x)) {
format(x, digits = 4)
} else x
}
knit_hooks$set(inline = inline_hook)
data("mtcars")
str(mtcars)
library(ggplot2)
library(dplyr)
ggplot(mtcars$mpg,aes(as.factor(mtcars$am))) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars$mpg,aes(as.factor(mtcars$am))) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x=as.factor(mtcars$am),y=mtcars$mpg)) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x=as.factor(am))) + facet_grid(mpg ~ .) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = am, y = mpg)) + ggtitle("Relationship between miles per gallon (MPG) and transmission mode")+xlab("Transmission mode") + ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = am, y = mpg)) +
geom_line() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = am, y = mpg), fill = x) +
geom_line() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = am, y = mpg), fill = am) +
geom_line() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = am, y = mpg), fill = am) +
geom_bar() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mean(mpg), fill = am) +
geom_point() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
)
ggplot(mtcars,aes(x = factor(am), y = mpg) +
geom_point() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
)
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot() +
ggtitle("Automatic versus Manual Transmission for MPG") +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
str(mtcars$am)
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot() +
ggtitle("Automatic versus Manual Transmission for MPG") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
mtcars$am <- factor(mtcars$am)
str(mtcars$am)
levels(mtcars$am)
levels(mtcars$am)[1] <- "Automatic"
levels(mtcars$am)[2] <- "Manual"
str(mtcars$am)
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot() +
ggtitle("Automatic versus Manual Transmission for MPG") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mpg), color=am) +
geom_boxplot() +
ggtitle("Automatic versus Manual Transmission for MPG") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mpg), color=am) +
geom_boxplot() +
ggtitle("Relationship between Miles per Gallon and Transmission Mode") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mpg), fill="lightblue") +
geom_boxplot() +
ggtitle("Relationship between Miles per Gallon and Transmission Mode") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot(fill="lightblue") +
ggtitle("Relationship between Miles per Gallon and Transmission Mode") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot(fill=c("lightblue","darkblue") +
ggtitle("Relationship between Miles per Gallon and Transmission Mode") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
)
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot(aes(fill=am) +
ggtitle("Figure 1. Fuel consumption for different transmission modes") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
)
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
geom_boxplot(aes(fill=am)) +
ggtitle("Figure 1. Fuel consumption for different transmission modes") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
ggplot(mtcars,aes(x = factor(am), y = mpg)) +
guides(fill=FALSE) +
geom_boxplot(aes(fill=am)) +
ggtitle("Figure 1. Fuel consumption for different transmission modes") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission Mode") +
ylab("Miles per Gallon (MPG)")
mtcars$am <- factor(mtcars$am, labels = c("Automatic","Manual"))
t.test(mtcars$mpg~mtcars$am)
?mtcars
require(datasets)
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
pairs(mtcars, main = "mtcars data", col = mtcars$am)
plotmatrix(mtcars, colour="red") +
geom_smooth(method="lm") + ggtitle("mtcars data")
library(ggplot2)
plotmatrix(mtcars, colour="red") +
geom_smooth(method="lm") + ggtitle("mtcars data")
ggpairs(mtcars, colour="red") +
geom_smooth(method="lm") + ggtitle("mtcars data")
install.packages("GGally")
library(GGally)
plotmatrix(mtcars, colour="red") +
geom_smooth(method="lm") + ggtitle("mtcars data")
ggpairs(mtcars, colour="red") +
geom_smooth(method="lm") + ggtitle("mtcars data")
ggpairs(mtcars)
ggpairs(mtcars, binwidth = 3) +
geom_smooth(method="lm") + ggtitle("mtcars data")
ggpairs(mtcars, aes(binwidth = 3)) +
geom_smooth(method="lm") + ggtitle("mtcars data")
ggpairs(mtcars, aes(binwidth = 3)) +
geom_smooth(method="lm")
ggpairs(mtcars, aes(binwidth = 3)) + ggtitle("mtcars data")
pairs(mtcars, main = "mtcars data", col = mtcars$am)
ggpairs(mtcars, 1:4) + ggtitle("mtcars data")
ggpairs(mtcars) + ggtitle("mtcars data") + theme(plot.title = element_text(hjust = 0.5))
multifit <- lm(mpg ~ ., data = mtcars)
simpfit <-  lm(mpg ~ am, data = mtcars)
ggcoef(multifit)
install.packages('broom')
ggcoef(multifit)
ggcoef(simpfit)
simpfit <-  lm(mpg ~ am-1, data = mtcars)
ggcoef(simpfit)
ggpairs(mtcars, mapping = aes(color = am)) + ggtitle("mtcars data") + theme(plot.title = element_text(hjust = 0.5))
str(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
ggpairs(mtcars, mapping = aes(color = am)) + ggtitle("mtcars data") + theme(plot.title = element_text(hjust = 0.5))
ggpairs(mtcars, 1:6, mapping = aes(color = am)) + ggtitle("mtcars data") + theme(plot.title = element_text(hjust = 0.5))
ggpairs(mtcars, c(1,7:11), mapping = aes(color = am)) + ggtitle("mtcars data") + theme(plot.title = element_text(hjust = 0.5))
ggplot(mtcars,aes(x = am, y = mpg)) +
guides(fill=FALSE) +
geom_boxplot(aes(fill=am)) +
ggtitle("Figure 1. Fuel consumption for different transmission modes") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggcoef(simpfit)
ggcoef(multifit)
multifit <- lm(mpg ~ .-1, data = mtcars)
ggcoef(multifit)
summary("mtcars")
str("mtcars")
data("mtcars")
str("mtcars")
head(mtcars)
str(mtcars)
summary(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
summary(mtcars)
ggplot(mtcars,aes(x = am, y = mpg)) +
guides(fill=FALSE) +
geom_boxplot(aes(fill=am)) +
ggtitle("Figure 1. Fuel consumption for different transmission modes") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggplot(mtcars,aes(x = am, y = mpg)) +
guides(fill=FALSE) +
geom_boxplot(aes(fill=am)) +
ggtitle("Figure 1. Fuel consumption for different transmission modes") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Transmission mode") +
ylab("Miles per gallon (MPG)")
ggpairs(mtcars, 1:6) + ggtitle("Figure 1. mtcars data") + theme(plot.title = element_text(hjust = 0.5))
par(mfrow=c(2, 1))
ggpairs(mtcars, 1:6) + ggtitle("Figure 1. mtcars data") + theme(plot.title = element_text(hjust = 0.5))
ggpairs(mtcars, c(1,7:11), mapping = aes(color = am)) + theme(plot.title = element_text(hjust = 0.5))
summary(mtcars)
head(mtcars)
multifit <- lm(mpg ~ .-1, data = mtcars)
simpfit <-  lm(mpg ~ am-1, data = mtcars)
coef(multifit)
simpfit <-  lm(mpg ~ am-1, data = mtcars)
coeft(simpfit)
coef(simpfit)
summary(simpfit)
simpfit <-  lm(mpg ~ am, data = mtcars)
summary(simpfit)
vif(simpfit)
library(car)
vif(simpfit)
vif(multifit)
multifit <- lm(mpg ~ ., data = mtcars)
vif(multifit)
null=lm(mpg~1, data=mtcars)
full=lm(mpg~., data=mtcars)
step(null, scope=list(lower=null, upper=full), direction="forward")
null=lm(mpg~am, data=mtcars)
full=lm(mpg~., data=mtcars)
step(null, scope=list(lower=null, upper=full), direction="forward")
best <- step(null, scope=list(lower=null, upper=full), direction="forward")
best$call
best$call{2}
best$call[2]
full1 <- lm(mpg ~ ., data = mtcars)
best1 <- step(full1, direction="backward",trace = 0)
paste("best model is", best1$call[2])
null=lm(mpg~1, data=mtcars)
full=lm(mpg~., data=mtcars)
best <- step(null, scope=list(lower=null, upper=full), direction="forward")
step(null, scope = list(upper=full), data=mtcars, direction="both")
full <- lm(mpg ~ ., data = mtcars)
best <- step(full, direction="backward",trace = 0)
paste("best model is", best$call[2])
start=lm(mpg~am, data=mtcars)
full=lm(mpg~., data=mtcars)
best <- step(null, scope=list(lower=start, upper=full), direction="forward")
null=lm(mpg~1, data=mtcars)
full=lm(mpg~., data=mtcars)
best <- step(null, scope=list(lower=null, upper=full), direction="forward")
null=lm(mpg~am, data=mtcars)
full=lm(mpg~., data=mtcars)
best <- step(null, scope=list(lower=null, upper=full), direction="forward")
fit <- lm(mpg~ am + hp + wt + qsec, data = mtcars)
summary(fit)
coef(fit)
fit <- lm(mpg~ am + wt + qsec, data = mtcars)
coef(fit)
vif(fit)
fit <- lm(mpg~ am + hp + wt + qsec, data = mtcars)
vif(fit)
fit1 <- lm(mpg~ am + wt + qsec, data = mtcars)
vif(fit1)
fitbase=lm(mpg~factor(am)+.-am,data=mtcars)
summary(fitbase)
fittotal=step(fitbase,trace=0)
fittotal$call
coef(fittotal)
confint(fittotal)
confint(fit)
confint(fit1)
coef(fit)
coef(fit1)
summary(fit)$r.squared
summary(fit1)$r.squared
vif(fit)
full=lm(mpg~., data=mtcars)
vif(full)
summary(full)
coef(full)
ggcoef(fit)
simplefit = lm(mpg~am, data=mtcars) # Simple regression model
coef(simpfit)
confint(simpfit)
simplefit = lm(mpg~am-1, data=mtcars) # Simple regression model
coef(simpfit)
confint(simpfit)
simplefit = lm(mpg~am-1, data=mtcars)
coef(simplefit)
confint(simplefit)
simplefit = lm(mpg~am, data=mtcars) # Simple regression model
coef(simplefit)
confint(simplefit)
summary(simplefit)$p.value
summary(simplefit)
summary(fit)
confint(simplefit)
simplefit = lm(mpg~am, data=mtcars)
p.value(simplefit)
summary(simplefit)
summry(simplefit)[2,4]
summary(simplefit)[2,4]
summary(simplefit)$coef[2,4]
t.test(mtcars$mpg~mtcars$am)$p.value
summary(lm(mpg~am, data=mtcars))$coef[2,4]
round(summary(lm(mpg~am, data=mtcars))$coef[2,4],4)
install.packages("xml")
install.packages("mlr")
library(mlr)
bstDMatrix <- xgboost(data = subtrainingM, max.depth = 2, eta = 1, nthread = 2, nround = 5, eval.metric = "logloss", objective = "multi:softmax", num_class= 6)
library(xgboost)
bstDMatrix <- xgboost(data = subtrainingM, max.depth = 2, eta = 1, nthread = 2, nround = 5, eval.metric = "logloss", objective = "multi:softmax", num_class= 6)
pml_buildingdata <- read.csv("pml_training.csv", na.strings = c("","NA","#DIV/0!"))
pml_testing <- read.csv("pml_testing.csv", na.strings = c("","NA","#DIV/0!"))
setwd("C:/Users/Xiaoqing/Desktop/CourseraR learning/Practical Machine Learning/Week4")
accuracy.validation <- 0.9677777
library('scales')
percent(accuracy.validation)
percent(accuracy.validation, digits=4)
scientific(accuracy.validation, digits = 4)
accuracy.validation
